<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>
  <log4net>
    <root>
      <level value="ALL"/>
    </root>
    <logger name="dblog" additivity="false">
      <!--日志记录级别-->
      <level value="ALL"/>
       <!--使用什么方式记录日志-->
      <appender-ref ref="SysAppender" />
    </logger>
    <!--记录到文件-->
    <appender name="SysAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <param name="File" value="datalog" />
      <param name="AppendToFile" value="true" />
      <param name="RollingStyle" value="Date" />
      <param name="DatePattern" value="\\yyyy\\MM-dd\\yyyy-MM-dd-HH&quot;.log&quot;" />
      <param name="StaticLogFileName" value="false" />
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="[%p]%d - %m%n" />
        <param name="Header" value="&#xD;&#xA;----------------------begin--------------------------&#xD;&#xA;" />
        <param name="Footer" value="&#xD;&#xA;----------------------end--------------------------&#xD;&#xA;" />
      </layout>
    </appender>
  </log4net>
  <!--必须指定框架，否则不执行,新版本默认支持4.0，可修改源文件，项目属性设定为.NET FRAMEWORK2.0后，打开重新编译，去掉其中的.NET 4.0编译导致错误环节，如此只能使用在.net 2.0框架-->
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>
</configuration>
<!--
   调用实例
   log4net.ILog log = log4net.LogManager.GetLogger("Filelog");
   log.Info(Message);
   
    %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息

    %n(new line):换行

    %d(datetime):输出当前语句运行的时刻

    %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数

    %t(thread id):当前语句所在的线程ID

    %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等

    %c(class):当前日志对象的名称
    
    %L：输出语句所在的行号

    %F：输出语句所在的文件名

    %-数字：表示该项的最小长度，如果不够，则用空格填充

    例如，转换模式为%r [%t]%-5p %c - %m%n 的 PatternLayout 将生成类似于以下内容的输出：

    176 [main] INFO  org.foo.Bar - Located nearest gas station.
    -->